name: Manual workflow

on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Field to display'
        # Default value if no value is explicitly provided
        default: 'subscription'
        # Input has to be provided for the workflow to run
        required: true

jobs:
  doit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: 'Prepare integration tests'
      run: |
        echo "$LOGONDATA_JSON" > $GITHUB_WORKSPACE/logon-data.json
        export LOGONDATA_FNAME=$GITHUB_WORKSPACE/logon-data.json
        INTEGRATIONTEST_DATA=$(jq -r '.${{ github.event.inputs.name }}?' $LOGONDATA_FNAME)
      env:
        LOGONDATA_JSON: ${{ secrets.INTEGRATIONTESTS_CLI_LOGONDATA_JSON }}
      shell: bash
      
    - name: Build project # This would actually build your project, using zip for an example artifact
      run: |
        zip -r test.zip $GITHUB_WORKSPACE/logon-data.json
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: temp
        release_name: TO_BE_DELETED
        draft: true
        prerelease: true
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./test.zip
        asset_name: test.zip
        asset_content_type: application/zip
